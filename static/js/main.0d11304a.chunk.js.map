{"version":3,"sources":["../node_modules/@aws-amplify/ui-components/dist/esm-es5 lazy /^/.//.*/.entry/.js$/ include: //.entry/.js$/ exclude: //.system/.entry/.js$/ groupOptions: {} namespace object","queries/course-queries.tsx","Components/CreateCourseDialog/CreateCourseDialog.tsx","Screens/Dashboard/Dashboard.tsx","Components/StudentOverview/StudentOverview.tsx","hooks/useQuizBlock.ts","hooks/useQuizBlockSubmissions.ts","Components/TaskSubmissionOverview/QuizBlockPie.tsx","Components/TaskSubmissionOverview/TaskSubmissionOverview.tsx","Components/ViewTaskSubmission/ObjectiveSection.tsx","Components/ViewTaskSubmission/SubmissionDetail.tsx","hooks/useLearningObjectives.ts","hooks/useQuizBlockSubmission.ts","Components/ViewTaskSubmission/ViewTaskSubmission.tsx","Navigation/Navigation.tsx","assets/images/images-1.png","Components/LinearProgressWithLabel/LinearProgressWithLabel.tsx","Components/LinearProgressWithLabel/ObjectiveDropDown.tsx","Components/LinearProgressWithLabel/MissionDropDown.tsx","queries/user-queries.tsx","Components/SingleStudentOverview/SingleStudentOverview.tsx","Components/LinearProgressWithLabel/TargetDropDown.tsx","Components/SingleStudentMasteryOverview/SingleStudentMasteryOverview.tsx","App.tsx","reportWebVitals.ts","environment.ts","clients/mock.ts","clients/cache.ts","clients/apollo-client.tsx","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","keys","Object","module","exports","SAVE_COURSE","gql","LargeTextField","styled","TextField","withAuthenticator","useState","open","setOpen","useMutation","addCourse","handleClose","Button","variant","color","onClick","data-testid","Dialog","fullWidth","onClose","aria-labelledby","maxWidth","DialogTitle","DialogContent","initialValues","courseTitle","courseDescription","instructor","onSubmit","values","setSubmitting","setTimeout","variables","course","name","description","missions","catch","error","console","log","handleChange","handleBlur","handleSubmit","isSubmitting","label","type","margin","value","onChange","onBlur","DialogActions","disabled","GET_COURSES","CourseList","div","CourseCard","Dashboard","useQuery","loading","courses","data","message","undefined","StyledTableCell","withStyles","theme","createStyles","head","backgroundColor","palette","common","black","borderBottom","body","fontSize","TableCell","StyledTableRow","root","action","hover","TableRow","useStyles","makeStyles","display","flexWrap","spacing","width","height","table","minWidth","borderedHeaderCell","borderRight","borderedCell","borderLeft","tableRow","users","firstName","lastName","userProgressMap","Map","StudentOverview","classes","useHistory","style","marginLeft","className","TableContainer","component","Paper","Table","aria-label","TableHead","align","TableBody","user","to","cursor","scope","get","time","statusColor","curStatus","objective","GET_QUIZBLOCK","useQuizBlock","quizblock","LIST_QUIZBLOCK_SUBMISSIONS","useQuizBlockSubmissions","quizblockSubmissions","QuizBlockPie","colorScale","x","y","white","TaskSubmissionOverview","history","rows","submission","push","student","points","title","ObjectiveSection","objectives","renderQuestionOptions","question","studentAnswer","correctChoices","Set","answers","options","option","studentChoices","choices","styleName","has","FormControlLabel","control","Radio","checked","renderQuestions","questions","answerMap","studentAnswers","forEach","answer","set","questionId","defaultAnswer","result","index","feedback","RadioGroup","SubmissionDetail","quizblockSubmission","requiredScore","GET_LEARNING_OBJECTIVE","useLearningObjectives","dir","learningObjectives","GET_QUIZBLOCK_SUBMISSION","useQuizBlockSubmission","ViewTaskSubmission","Navigation","Navbar","collapseOnSelect","expand","bg","Brand","href","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","Item","Form","inline","Auth","signOut","BorderLinearProgress","borderRadius","colorPrimary","bar","LinearProgress","LinearProgressWithLabel","props","Box","alignItems","mr","ml","Typography","Math","round","background","paper","nested","paddingLeft","progressBar","PaddedDiv","DoublePaddedDiv","TargetDropDown","tasks","List","ListItem","button","border","borderColor","borderStyle","ListItemText","primary","in","timeout","unmountOnExit","task","flexDirection","MissionDropDown","subMissions","subMission","GET_USERS","StudentDiv","StudentNameDiv","StudentImageDiv","FieldTitleDiv","RowDiv","ColumnDiv","SingleStudentOverview","test","location","state","inputUser","instructions","parentMissionId","parentMissionIndex","pages","requirements","marginRight","src","StudentPicture","alt","mission","goal","compMission","compGoal","SingleStudentMasteryOveriew","target","compLearningObjectives","compTarget","setUser","storeToken","currentSession","userSession","accessToken","getAccessToken","jwt","getJwtToken","localStorage","setItem","JSON","stringify","currentAuthenticatedUser","authUser","useEffect","Hub","listen","payload","event","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","environment","uri","process","quizblockVar","makeVar","blockIndex","pageIndex","quizblockSubmissionVar","quizblockSubmissionsVar","cache","InMemoryCache","typePolicies","Query","fields","read","mock","authLink","setContext","_","headers","token","getItem","authorization","httpLink","HttpLink","apolloClient","ApolloClient","link","from","Amplify","configure","identityPoolId","region","userPoolId","userPoolWebClientId","oauth","domain","redirectSignIn","redirectSignOut","responseType","ReactDOM","render","StrictMode","rel","integrity","crossOrigin","client","document","getElementById"],"mappings":"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","file":"static/js/main.0d11304a.chunk.js","sourcesContent":["var map = {\n\t\"./amplify-amazon-button_5.entry.js\": [\n\t\t578,\n\t\t16\n\t],\n\t\"./amplify-auth-fields_9.entry.js\": [\n\t\t579,\n\t\t17\n\t],\n\t\"./amplify-authenticator.entry.js\": [\n\t\t580,\n\t\t5\n\t],\n\t\"./amplify-button_3.entry.js\": [\n\t\t581,\n\t\t18\n\t],\n\t\"./amplify-chatbot.entry.js\": [\n\t\t582,\n\t\t4\n\t],\n\t\"./amplify-checkbox.entry.js\": [\n\t\t583,\n\t\t19\n\t],\n\t\"./amplify-confirm-sign-in_7.entry.js\": [\n\t\t584,\n\t\t6\n\t],\n\t\"./amplify-container.entry.js\": [\n\t\t585,\n\t\t20\n\t],\n\t\"./amplify-federated-buttons_2.entry.js\": [\n\t\t586,\n\t\t21\n\t],\n\t\"./amplify-federated-sign-in.entry.js\": [\n\t\t587,\n\t\t22\n\t],\n\t\"./amplify-form-field_4.entry.js\": [\n\t\t588,\n\t\t23\n\t],\n\t\"./amplify-greetings.entry.js\": [\n\t\t589,\n\t\t24\n\t],\n\t\"./amplify-icon-button.entry.js\": [\n\t\t590,\n\t\t25\n\t],\n\t\"./amplify-icon.entry.js\": [\n\t\t591,\n\t\t7\n\t],\n\t\"./amplify-link.entry.js\": [\n\t\t592,\n\t\t26\n\t],\n\t\"./amplify-nav_2.entry.js\": [\n\t\t593,\n\t\t27\n\t],\n\t\"./amplify-photo-picker.entry.js\": [\n\t\t594,\n\t\t28\n\t],\n\t\"./amplify-picker.entry.js\": [\n\t\t595,\n\t\t29\n\t],\n\t\"./amplify-radio-button_2.entry.js\": [\n\t\t596,\n\t\t8\n\t],\n\t\"./amplify-s3-album.entry.js\": [\n\t\t597,\n\t\t9\n\t],\n\t\"./amplify-s3-image-picker.entry.js\": [\n\t\t598,\n\t\t10\n\t],\n\t\"./amplify-s3-image.entry.js\": [\n\t\t599,\n\t\t11\n\t],\n\t\"./amplify-s3-text-picker.entry.js\": [\n\t\t600,\n\t\t12\n\t],\n\t\"./amplify-s3-text.entry.js\": [\n\t\t601,\n\t\t13\n\t],\n\t\"./amplify-select-mfa-type.entry.js\": [\n\t\t602,\n\t\t30\n\t],\n\t\"./amplify-sign-in-button.entry.js\": [\n\t\t603,\n\t\t14\n\t],\n\t\"./amplify-toast.entry.js\": [\n\t\t604,\n\t\t31\n\t],\n\t\"./amplify-tooltip.entry.js\": [\n\t\t605,\n\t\t32\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 463;\nmodule.exports = webpackAsyncContext;","import { gql } from '@apollo/client';\n\nexport const SAVE_COURSE = gql`\n   mutation AddCourse($course: CourseInput!) {\n      addCourse(course: $course) {\n         id\n         name\n      }\n   }\n`;\n","import {\n   Button,\n   Dialog,\n   DialogTitle,\n   DialogContent,\n   TextField,\n   DialogActions,\n} from '@material-ui/core';\nimport { useState } from 'react';\nimport styled from 'styled-components';\nimport { Formik } from 'formik';\nimport { useMutation } from '@apollo/client';\nimport { withAuthenticator } from '@aws-amplify/ui-react';\nimport { SAVE_COURSE } from '../../queries/course-queries';\n\nconst LargeTextField = styled(TextField)`\n   input {\n      height: 50px;\n      font-size: 20px;\n   }\n`;\n\nfunction CreateCourseDialog() {\n   const [open, setOpen] = useState(false);\n   const [addCourse] = useMutation(SAVE_COURSE);\n\n   const handleClickOpen = () => {\n      setOpen(true);\n   };\n\n   const handleClose = () => {\n      setOpen(false);\n   };\n\n   return (\n      <div>\n         <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleClickOpen}\n            data-testid=\"create-btn\"\n         >\n            Create New Course\n         </Button>\n         <Dialog\n            open={open}\n            fullWidth\n            onClose={handleClose}\n            aria-labelledby=\"form-dialog-title\"\n            maxWidth=\"sm\"\n            data-testid=\"create-dialog\"\n         >\n            <DialogTitle id=\"form-dialog-title\">New Course</DialogTitle>\n            <DialogContent>\n               <Formik\n                  initialValues={{\n                     courseTitle: '',\n                     courseDescription: '',\n                     instructor: 'currentUser',\n                  }}\n                  onSubmit={(values, { setSubmitting }) => {\n                     setTimeout(() => {\n                        setSubmitting(false);\n                        handleClose();\n                        addCourse({\n                           variables: {\n                              course: {\n                                 name: values.courseTitle,\n                                 description: values.courseDescription,\n                                 instructor: 'Mr. Butcher',\n                                 missions: [],\n                              },\n                           },\n                        }).catch((error) => console.log(error));\n                     }, 400);\n                  }}\n               >\n                  {({ values, handleChange, handleBlur, handleSubmit, isSubmitting }) => (\n                     <form onSubmit={handleSubmit}>\n                        <LargeTextField\n                           id=\"courseTitle\"\n                           label=\"Course Title\"\n                           type=\"text\"\n                           fullWidth\n                           variant=\"outlined\"\n                           margin=\"dense\"\n                           value={values.courseTitle}\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                        />\n\n                        <LargeTextField\n                           id=\"courseDescription\"\n                           label=\"Description\"\n                           type=\"text\"\n                           fullWidth\n                           variant=\"outlined\"\n                           margin=\"dense\"\n                           value={values.courseDescription}\n                           onChange={handleChange}\n                           onBlur={handleBlur}\n                        />\n\n                        <DialogActions>\n                           <Button onClick={handleClose} color=\"primary\">\n                              Cancel\n                           </Button>\n                           <Button type=\"submit\" disabled={isSubmitting} color=\"primary\">\n                              Create\n                           </Button>\n                        </DialogActions>\n                     </form>\n                  )}\n               </Formik>\n            </DialogContent>\n         </Dialog>\n      </div>\n   );\n}\n\nexport default withAuthenticator(CreateCourseDialog);\n","import styled from 'styled-components';\nimport { gql, useQuery } from '@apollo/client';\nimport { Course } from '../../interfaces/Course';\nimport { Courses } from '../../interfaces/Courses';\n\nconst GET_COURSES = gql`\n   query GetCourses {\n      courses {\n         id\n         name\n         instructor\n         description\n      }\n   }\n`;\n\nconst CourseList = styled.div`\n   display: flex;\n`;\n\nconst CourseCard = styled.div`\n   border: 1px solid gray;\n   margin: 12px;\n   border-radius: 8px;\n   padding: 12px;\n`;\n\nfunction Dashboard() {\n   const { loading, error, data: courses } = useQuery<Courses>(GET_COURSES);\n   if (loading) return <div>Loading...</div>;\n   if (error) return <div>`Error! ${error.message}`</div>;\n\n   if (courses === undefined) {\n      return <div>Courses Undefined</div>;\n   }\n\n   return (\n      <CourseList>\n         {courses.courses.map((course: Course) => (\n            <CourseCard key={course.id}>\n               <div>Course name: {course.name}</div>\n               <div>Instructor: {course.instructor}</div>\n               <div>Description: {course.description}</div>\n            </CourseCard>\n         ))}\n      </CourseList>\n   );\n}\n\nexport default Dashboard;\n","import {\n   withStyles,\n   Theme,\n   createStyles,\n   TableCell,\n   TableRow,\n   TableContainer,\n   Paper,\n   Table,\n   TableHead,\n   TableBody,\n   makeStyles,\n} from '@material-ui/core';\nimport React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport { useQuery } from '@apollo/client';\nimport { Progress } from '../../interfaces/Progress';\nimport { Users } from '../../interfaces/Users';\nimport { GET_LEARNING_OBJECTIVE } from '../../queries/LearningObjectiveQueries';\nimport { LearningObjectives } from '../../interfaces/LearningObjectives';\nimport { LearningObjective } from '../../interfaces/LearningObjective';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n   createStyles({\n      head: {\n         backgroundColor: '#8484e1',\n         color: theme.palette.common.black,\n         borderBottom: '0px solid',\n      },\n      body: {\n         fontSize: 14,\n         borderBottom: '0px solid',\n      },\n   })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n         },\n      },\n   })\n)(TableRow);\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         display: 'flex',\n         flexWrap: 'wrap',\n         '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(160),\n            height: theme.spacing(60),\n         },\n      },\n      table: {\n         minWidth: 700,\n         // maxWidth: 700\n      },\n      borderedHeaderCell: {\n         borderRight: '4px solid gray',\n      },\n      borderedCell: {\n         borderLeft: '4px solid gray',\n         borderRight: '4px solid gray',\n         borderBottom: '4px solid gray',\n      },\n      tableRow: {\n         '&:hover': {\n            backgroundColor: '#d9d9d9 !important',\n         },\n      },\n   })\n);\n\nconst users: Users = {\n   users: [\n      {\n         id: '1',\n         firstName: 'Sansa',\n         lastName: 'Stark',\n      },\n      {\n         id: '2',\n         firstName: 'Robb',\n         lastName: 'Stark',\n      },\n      {\n         id: '3',\n         firstName: 'Arya',\n         lastName: 'Stark',\n      },\n      {\n         id: '4',\n         firstName: 'John',\n         lastName: 'Snow',\n      },\n   ],\n};\n\nconst userProgressMap = new Map<string, Progress>();\n\nfunction StudentOverview() {\n   const classes = useStyles();\n   const history = useHistory();\n\n   return (\n      <div style={{ marginLeft: '5px', fontSize: '40px' }}>\n         <div style={{ marginLeft: '5px' }}>Student Overview</div>\n         <div className={classes.root}>\n            <TableContainer style={{ marginLeft: '5px' }} component={Paper}>\n               <Table className={classes.table} aria-label=\"customized table\">\n                  <TableHead>\n                     <TableRow>\n                        <StyledTableCell className={classes.borderedHeaderCell}>\n                           Section\n                        </StyledTableCell>\n                        <StyledTableCell className={classes.borderedHeaderCell}>\n                           Student\n                        </StyledTableCell>\n                        <StyledTableCell className={classes.borderedHeaderCell} align=\"center\">\n                           Time\n                        </StyledTableCell>\n                        <StyledTableCell align=\"center\">Status</StyledTableCell>\n                        <StyledTableCell style={{ width: 1, backgroundColor: 'black' }} />\n\n                        <StyledTableCell className={classes.borderedHeaderCell}>\n                           Objective #1\n                        </StyledTableCell>\n                        <StyledTableCell className={classes.borderedHeaderCell}>\n                           Objective #2\n                        </StyledTableCell>\n                     </TableRow>\n                  </TableHead>\n                  <TableBody>\n                     {users.users.map((user) => (\n                        <Link to={`/singleStudentOverview/${user.id}`}>\n                           <StyledTableRow\n                              hover\n                              style={{ cursor: 'pointer' }}\n                              className={classes.tableRow}\n                           >\n                              <StyledTableCell className={classes.borderedCell} scope=\"row\">\n                                 1\n                              </StyledTableCell>\n                              <StyledTableCell className={classes.borderedCell} scope=\"row\">\n                                 {user.firstName} {user.lastName}\n                              </StyledTableCell>\n                              <StyledTableCell\n                                 className={classes.borderedCell}\n                                 scope=\"row\"\n                                 align=\"center\"\n                              >\n                                 {userProgressMap.get(user.id)?.time}\n                              </StyledTableCell>\n                              <StyledTableCell\n                                 style={{\n                                    backgroundColor: userProgressMap.get(user.id)?.statusColor,\n                                    borderBottom: '4px solid gray',\n                                 }}\n                                 align=\"center\"\n                                 scope=\"row\"\n                              >\n                                 {userProgressMap.get(user.id)?.curStatus}\n                              </StyledTableCell>\n                              <StyledTableCell style={{ backgroundColor: 'black' }} />\n                              <StyledTableCell\n                                 className={classes.borderedCell}\n                                 scope=\"row\"\n                                 align=\"center\"\n                              >\n                                 {userProgressMap.get(user.id)?.objective}\n                              </StyledTableCell>\n                              <StyledTableCell\n                                 style={{\n                                    borderBottom: '4px solid gray',\n                                 }}\n                              />\n                              <StyledTableCell className={classes.borderedCell} />\n                           </StyledTableRow>\n                        </Link>\n                     ))}\n                  </TableBody>\n               </Table>\n            </TableContainer>\n         </div>\n      </div>\n   );\n}\n\nexport default StudentOverview;\n","import { gql, useQuery } from '@apollo/client';\nimport { QuizBlock } from '../interfaces/QuizBlock';\n\nconst GET_QUIZBLOCK = gql`\n   query GetQuizBlockById {\n      quizblock @client {\n         id\n         title\n         blockIndex\n         pageIndex\n         requiredScore\n         points\n         questions {\n            id\n            description\n            feedback\n            points\n            options {\n               id\n               description\n            }\n            answers\n         }\n      }\n   }\n`;\n\ntype QuizBlockData = {\n   quizblock: QuizBlock;\n};\n\nfunction useQuizBlock() {\n   const { loading, error, data } = useQuery<QuizBlockData>(GET_QUIZBLOCK);\n   return {\n      loading,\n      error,\n      quizblock: data?.quizblock,\n   };\n}\n\nexport default useQuizBlock;\n","import { gql, useQuery } from '@apollo/client';\nimport { QuizBlockSubmission } from '../interfaces/QuizBlockSubmission';\n\nconst LIST_QUIZBLOCK_SUBMISSIONS = gql`\n   query ListQuizBlockSubmissions {\n      quizblockSubmissions @client {\n         id\n         student\n         points\n      }\n   }\n`;\n\ntype QuizBlockSubmissionsData = {\n   quizblockSubmissions: QuizBlockSubmission[];\n};\n\nfunction useQuizBlockSubmissions() {\n   const { loading, error, data } = useQuery<QuizBlockSubmissionsData>(LIST_QUIZBLOCK_SUBMISSIONS);\n   return {\n      loading,\n      error,\n      quizblockSubmissions: data?.quizblockSubmissions,\n   };\n}\n\nexport default useQuizBlockSubmissions;\n","import { VictoryPie } from 'victory';\n\nfunction QuizBlockPie() {\n   return (\n      <VictoryPie\n         colorScale={['#347ab2', '#4baa48', '#dd191b']}\n         width={400}\n         data={[\n            { x: '80+', y: 10 },\n            { x: '60-80', y: 20 },\n            { x: 'less than 60', y: 3 },\n         ]}\n      />\n   );\n}\n\nexport default QuizBlockPie;\n","import Table from '@material-ui/core/Table';\nimport { withStyles, Theme, createStyles, makeStyles } from '@material-ui/core/styles';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useHistory } from 'react-router-dom';\nimport useQuizBlock from '../../hooks/useQuizBlock';\nimport useQuizBlockSubmissions from '../../hooks/useQuizBlockSubmissions';\nimport QuizBlockPie from './QuizBlockPie';\nimport './TaskSubmissionOverview.css';\n\nconst StyledTableCell = withStyles((theme: Theme) =>\n   createStyles({\n      head: {\n         backgroundColor: theme.palette.common.black,\n         color: theme.palette.common.white,\n      },\n      body: {\n         fontSize: 14,\n      },\n   })\n)(TableCell);\n\nconst StyledTableRow = withStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         '&:nth-of-type(odd)': {\n            backgroundColor: theme.palette.action.hover,\n         },\n      },\n   })\n)(TableRow);\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         display: 'flex',\n         flexWrap: 'wrap',\n         '& > *': {\n            margin: theme.spacing(1),\n            width: theme.spacing(160),\n            height: theme.spacing(60),\n         },\n      },\n      table: {\n         minWidth: 700,\n      },\n   })\n);\n\nfunction TaskSubmissionOverview() {\n   const classes = useStyles();\n   const history = useHistory();\n   const { quizblock } = useQuizBlock();\n   const { loading, error, quizblockSubmissions } = useQuizBlockSubmissions();\n\n\n   if (loading) {\n      return <p>Loading...</p>;\n   }\n   if (error) {\n      return <p>`Error! ${error.message}`</p>;\n   }\n\n   if (!quizblock || !quizblockSubmissions) {\n      return <p>Undefined data</p>;\n   }\n\n   const rows: JSX.Element[] = quizblockSubmissions.map((submission) => {\n\n      return (\n         <StyledTableRow\n            key={submission.student}\n            style={{ cursor: 'pointer' }}\n            onClick={() => {\n               history.push('/viewTaskSubmission');\n            }}\n         >\n            <StyledTableCell component=\"th\" scope=\"row\">\n               {submission.student}\n            </StyledTableCell>\n            <StyledTableCell>{`${submission.points}/${quizblock.points}`}</StyledTableCell>\n         </StyledTableRow>\n      );\n   });\n\n   return (\n      <div className=\"task-overview-container\">\n         <div className=\"chart\">\n            <QuizBlockPie />\n         </div>\n         <div style={{ marginLeft: '5px' }}>{quizblock.title}</div>\n         <div className={classes.root}>\n            <TableContainer style={{ marginLeft: '5px' }} component={Paper}>\n               <Table className={classes.table} aria-label=\"customized table\">\n                  <TableHead>\n                     <TableRow>\n                        <StyledTableCell>Student Name</StyledTableCell>\n                        <StyledTableCell>Points</StyledTableCell>\n                     </TableRow>\n                  </TableHead>\n                  <TableBody>{rows}</TableBody>\n               </Table>\n            </TableContainer>\n         </div>\n      </div>\n   );\n}\n\nexport default TaskSubmissionOverview;\n","import { LearningObjective } from '../../interfaces/LearningObjective';\n\ntype Props = {\n   objectives: LearningObjective[];\n};\n\nfunction ObjectiveSection({ objectives }: Props) {\n   return (\n      <div className=\"objectives\">\n         {objectives.map((objective) => (\n            <div className=\"objective\" key={objective.id}>\n               Learning Objective: {objective.description}\n            </div>\n         ))}\n      </div>\n   );\n}\n\nexport default ObjectiveSection;\n","import RadioGroup from '@material-ui/core/RadioGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport { Radio } from '@material-ui/core';\nimport { Question, Option, QuizBlock } from '../../interfaces/QuizBlock';\nimport { QuizBlockSubmission, StudentAnswer } from '../../interfaces/QuizBlockSubmission';\n\nfunction renderQuestionOptions(question: Question, studentAnswer: StudentAnswer) {\n   const correctChoices = new Set<number>(question.answers);\n\n   return question.options.map((option: Option) => {\n      const studentChoices = new Set<number>(studentAnswer.choices);\n\n     let styleName = correctChoices.has(option.id) ? 'option-correct' : '';\n      if (studentChoices.has(option.id) && !correctChoices.has(option.id)) {\n         styleName = 'option-incorrect';\n      }\n\n      return (\n         <FormControlLabel\n            key={option.id}\n            value={option.description}\n            disabled\n            className={styleName}\n            control={<Radio checked={studentChoices.has(option.id)} />}\n            label={option.description}\n         />\n      );\n   });\n}\n\nfunction renderQuestions(questions: Question[], submission: QuizBlockSubmission) {\n   const answerMap = new Map<string, StudentAnswer>();\n   submission.studentAnswers.forEach((answer) => {\n      answerMap.set(answer.questionId, answer);\n   });\n\n   const defaultAnswer: StudentAnswer = {\n      questionId: 'question',\n      result: false,\n      choices: [0],\n   };\n  \n   return questions.map((question, index) => {\n      const answer = answerMap.get(question.id) || defaultAnswer;\n      const feedback = answer.result\n         ? `That's right! ${question.feedback}`\n         : `Not quite. ${question.feedback}`;\n      return (\n         <div className=\"question\" key={question.id}>\n            <p className=\"question-desc\">\n               <span className=\"question-index\">{index + 1}</span>\n               {question.description}\n            </p>\n            <RadioGroup>{renderQuestionOptions(question, answer)}</RadioGroup>\n            <p className=\"feedback\">{feedback}</p>\n         </div>\n      );\n   });\n}\n\ntype Props = {\n   quizblock: QuizBlock;\n   quizblockSubmission: QuizBlockSubmission;\n};\n\nfunction SubmissionDetail({ quizblock, quizblockSubmission }: Props) {\n   return (\n      <div className=\"quizblock\">\n         <div className=\"quizblock-header\">\n            <h2>Submission Details</h2>\n            <h3 className=\"quizblock-title\">{quizblock.title}</h3>\n            <p className=\"quizblock-points\">Total Points: {quizblock.points}</p>\n            <p>Required Score: {quizblock.requiredScore}</p>\n            <p>\n               <span className=\"student-name\">Student Name:</span>\n               {quizblockSubmission.student}\n            </p>\n            <p>\n               The student got\n               <span className=\"student-points\">{quizblockSubmission.points}</span>\n               {` out of ${quizblock.points}.`}\n            </p>\n         </div>\n         <div className=\"quizblock-body\">\n            {renderQuestions(quizblock.questions, quizblockSubmission)}\n         </div>\n      </div>\n   );\n}\n\nexport default SubmissionDetail;\n","import { gql, useQuery } from '@apollo/client';\nimport { LearningObjective } from '../interfaces/LearningObjective';\n\nconst GET_LEARNING_OBJECTIVE = gql`\n   query {\n      learningObjectives(course: \"Math\") {\n         id\n         course\n         name\n         description\n      }\n   }\n`;\n\ntype LearningObjectivesData = {\n   learningObjectives: LearningObjective[];\n};\n\nfunction useLearningObjectives() {\n   const { loading, error, data } = useQuery<LearningObjectivesData>(GET_LEARNING_OBJECTIVE);\n   console.dir(data);\n   return {\n      loading,\n      error,\n      learningObjectives: data?.learningObjectives,\n   };\n}\n\nexport default useLearningObjectives;\n","import { gql, useQuery } from '@apollo/client';\nimport { QuizBlockSubmission } from '../interfaces/QuizBlockSubmission';\n\nconst GET_QUIZBLOCK_SUBMISSION = gql`\n   query GetQuizBlockSubmission {\n      quizblockSubmission @client {\n         id\n         student\n         points\n         studentAnswers {\n            questionId\n            result\n            choices\n         }\n      }\n   }\n`;\n\ntype QuizBlockSubmissionData = {\n   quizblockSubmission: QuizBlockSubmission;\n};\n\nfunction useQuizBlockSubmission() {\n   const { loading, error, data } = useQuery<QuizBlockSubmissionData>(GET_QUIZBLOCK_SUBMISSION);\n   return {\n      loading,\n      error,\n      quizblockSubmission: data?.quizblockSubmission,\n   };\n}\n\nexport default useQuizBlockSubmission;\n","import ObjectiveSection from './ObjectiveSection';\nimport SubmissionDetail from './SubmissionDetail';\nimport useQuizBlock from '../../hooks/useQuizBlock';\nimport useLearningObjectives from '../../hooks/useLearningObjectives';\nimport useQuizBlockSubmission from '../../hooks/useQuizBlockSubmission';\nimport './ViewTaskSubmission.css';\n\nfunction ViewTaskSubmission() {\n   const { learningObjectives } = useLearningObjectives();\n   const { quizblock } = useQuizBlock();\n   const { quizblockSubmission } = useQuizBlockSubmission();\n\n   if (!learningObjectives) {\n      return <>Learning Objective Undefined</>;\n   }\n   if (!quizblock) {\n      return <p>quizblock undefined</p>;\n   }\n   if (!quizblockSubmission) {\n      return <p>quizblockSubmission undefined</p>;\n   }\n\n   return (\n      <div className=\"view-task-submission\">\n         <ObjectiveSection objectives={learningObjectives} />\n         <SubmissionDetail quizblock={quizblock} quizblockSubmission={quizblockSubmission} />\n      </div>\n   );\n}\n\nexport default ViewTaskSubmission;\n","import { Auth } from 'aws-amplify';\nimport { Navbar, Nav, Form, Button, NavDropdown } from 'react-bootstrap';\nimport './Navigation.css';\n\nexport default function Navigation() {\n   return (\n      <Navbar collapseOnSelect expand=\"sm\" bg=\"dark\" variant=\"dark\">\n         <Navbar.Brand href=\"/\">Flipt(Ed)</Navbar.Brand>\n         <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\n         <Navbar.Collapse id=\"responsive-navbar-nav\">\n            <Nav className=\"container-fluid\">\n               <Nav.Link href=\"/\">Dashboard</Nav.Link>\n               <NavDropdown title=\"Dev Screens\" className=\"ml-auto\" id=\"dev-dropdown\">\n                  <NavDropdown.Item href=\"/addNewCourse\">Create Course</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/addTaskSubmission\">Submit Task</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/taskSubmissionOverview\">\n                     Task Submission Overview\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"/viewTaskSubmission\">\n                     View Task Submission\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"/studentOverview\">Student Overview</NavDropdown.Item>\n                  <NavDropdown.Item href=\"/singleStudentOverview\">\n                     Single Student Overview\n                  </NavDropdown.Item>\n                  <NavDropdown.Item href=\"/singleStudentMasteryOverview\">\n                     Single Student Mastery Overview\n                  </NavDropdown.Item>\n               </NavDropdown>\n               <Form inline>\n                  <Button className=\"ml-auto\" type=\"submit\" onClick={() => Auth.signOut()}>\n                     Log Out\n                  </Button>\n               </Form>\n            </Nav>\n         </Navbar.Collapse>\n      </Navbar>\n   );\n}\n","export default __webpack_public_path__ + \"static/media/images-1.772bc0e1.png\";","/* eslint-disable react/destructuring-assignment */\nimport { Box, LinearProgress, LinearProgressProps, Typography } from '@material-ui/core';\nimport { createStyles, withStyles, Theme } from '@material-ui/core/styles';\n\nconst BorderLinearProgress = withStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         height: 10,\n         borderRadius: 5,\n      },\n      colorPrimary: {},\n      bar: {\n         borderRadius: 5,\n         backgroundColor: '#082580',\n      },\n   })\n)(LinearProgress);\n\nfunction LinearProgressWithLabel(props: LinearProgressProps & { value: number }) {\n   const { value } = props;\n   return (\n      <Box display=\"flex\" alignItems=\"center\">\n         <Box width=\"100%\" mr={1} ml={1}>\n            <BorderLinearProgress variant=\"determinate\" {...props} />\n         </Box>\n         <Box minWidth={35}>\n            <Typography variant=\"body2\" color=\"textSecondary\">{`${Math.round(value)}%`}</Typography>\n         </Box>\n      </Box>\n   );\n}\n\nexport default LinearProgressWithLabel;\n","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport LinearProgressWithLabel from './LinearProgressWithLabel';\nimport { Task } from '../../interfaces/Task';\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         width: '100%',\n         maxWidth: 500,\n         backgroundColor: theme.palette.background.paper,\n      },\n      nested: {\n         paddingLeft: theme.spacing(4),\n      },\n      progressBar: {\n         minWidth: '150px',\n      },\n   })\n);\n\nconst PaddedDiv = styled.div`\n   padding-left: 30px;\n`;\n\nconst DoublePaddedDiv = styled.div`\n   padding-left: 40px;\n`;\n\nexport interface ObjectiveDropDownProps {\n   name: string;\n   tasks: Task[];\n}\n\n// Handles state to open and close dropdown\nfunction handleClick(\n   openObjectBool: boolean,\n   openFunction: React.Dispatch<React.SetStateAction<boolean>>\n): void {\n   openFunction(!openObjectBool);\n}\n\nexport default function TargetDropDown({ name, tasks }: ObjectiveDropDownProps) {\n   const classes = useStyles();\n   const [open, setOpen] = useState(false);\n\n   const TASK_PERCENT = 100;\n   const OBJECTIVE_PERCENT = 50;\n\n   return (\n      <List component=\"div\">\n         <PaddedDiv>\n            <ListItem\n               button\n               onClick={() => handleClick(open, setOpen)}\n               style={{\n                  border: '1px',\n                  borderColor: '#C2D2FC',\n                  borderStyle: 'solid',\n                  backgroundColor: '#E9EEFC',\n               }}\n            >\n               <ListItemText primary={name} />\n               <LinearProgressWithLabel className={classes.progressBar} value={OBJECTIVE_PERCENT} />\n               {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n         </PaddedDiv>\n         <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {tasks.map((task: Task) => (\n               <List component=\"div\">\n                  <div style={{ display: 'flex', flexDirection: 'row' }}>\n                     <DoublePaddedDiv>\n                        <ListItem\n                           button\n                           className={classes.nested}\n                           style={{\n                              border: '1px',\n                              borderColor: '#C2D2FC',\n                              borderStyle: 'solid',\n                              backgroundColor: '#E9EEFC',\n                           }}\n                        >\n                           <ListItemText primary={task.name} />\n                           <LinearProgressWithLabel\n                              className={classes.progressBar}\n                              value={TASK_PERCENT}\n                           />\n                        </ListItem>\n                     </DoublePaddedDiv>\n                  </div>\n               </List>\n            ))}\n         </Collapse>\n      </List>\n   );\n}\n","import React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport LinearProgressWithLabel from './LinearProgressWithLabel';\nimport ObjectiveDropDown from './ObjectiveDropDown';\nimport { MissionSubMission } from '../../interfaces/MissionSubMission';\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         width: '100%',\n         maxWidth: 500,\n         backgroundColor: theme.palette.background.paper,\n      },\n      nested: {\n         paddingLeft: theme.spacing(4),\n      },\n      progressBar: {\n         minWidth: '150px',\n      },\n   })\n);\n\nconst PaddedDiv = styled.div`\n   padding-left: 10px;\n`;\n\nexport interface MissionDropDownProps {\n   name: string;\n   subMissions: MissionSubMission[];\n}\n\n// Handles state to open or close dropdown\nfunction handleClick(\n   openObjectBool: boolean,\n   openFunction: React.Dispatch<React.SetStateAction<boolean>>\n): void {\n   openFunction(!openObjectBool);\n}\n\nexport default function MissionDropDown({ name, subMissions }: MissionDropDownProps) {\n   const classes = useStyles();\n   const [open, setOpen] = useState(false);\n\n   const TARGET_PERCENT = 50;\n\n   return (\n      <List component=\"nav\" aria-labelledby=\"nested-list-subheader\" className={classes.root}>\n         <PaddedDiv>\n            <ListItem\n               button\n               onClick={() => handleClick(open, setOpen)}\n               style={{\n                  border: '1px',\n                  borderColor: '#C2D2FC',\n                  borderStyle: 'solid',\n                  backgroundColor: '#E9EEFC',\n               }}\n            >\n               <ListItemText primary={name} />\n               <LinearProgressWithLabel className={classes.progressBar} value={TARGET_PERCENT} />\n               {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n         </PaddedDiv>\n         <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {subMissions.map((subMission: MissionSubMission) => (\n               <ObjectiveDropDown name={subMission.name} tasks={subMission.tasks} />\n            ))}\n         </Collapse>\n      </List>\n   );\n}\n","import { gql } from '@apollo/client';\n\nexport const GET_USERS = gql`\n   query GetUsers {\n      users: getUsers {\n         id\n         firstName\n         lastName\n      }\n   }\n`;\n\nexport const ADD_USER = gql`\n   mutation AddUser($user: UserInput!) {\n      addUser(user: $user) {\n         firstName\n         lastName\n      }\n   }\n`;\n","/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable @typescript-eslint/no-unsafe-member-access */\n/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport { useQuery } from '@apollo/client';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport styled from 'styled-components';\nimport { useHistory, useParams } from 'react-router-dom';\nimport StudentPicture from '../../assets/images/images-1.png';\nimport { User } from '../../interfaces/User';\nimport LinearProgressWithLabel from '../LinearProgressWithLabel/LinearProgressWithLabel';\nimport MissionDropDown from '../LinearProgressWithLabel/MissionDropDown';\nimport { MissionSubMission } from '../../interfaces/MissionSubMission';\nimport { GET_USERS } from '../../queries/user-queries';\n\nconst StudentDiv = styled.div`\n   height: 275px;\n   width: 100%;\n   font-size: 24pt;\n   display: flex;\n   justify-content: flex-start;\n   align-items: left;\n   flex-direction: column;\n`;\n\nconst StudentNameDiv = styled.div`\n   height: 50px;\n   width: 100%;\n   font-size: 24pt;\n`;\n\nconst StudentImageDiv = styled.div`\n   height: 200px;\n   width: 100%;\n   font-size: 24pt;\n   display: flex;\n   justify-content: flex-start;\n   align-items: left;\n`;\n\nconst FieldTitleDiv = styled.div`\n   height: 30px;\n   width: 100%;\n   background-color: #99d6ff;\n   align-items: center;\n   display: flex;\n   padding: 5px;\n   border: 1px;\n   border-color: #1A8BDE;\n   border-style: solid;\n}\n`;\n\nconst RowDiv = styled.div`\n   width: 100%;\n   display: flex;\n   background-color: white;\n`;\n\nconst ColumnDiv = styled.div`\n   width: 100%;\n   flex-direction: column;\n   padding: 5px;\n`;\n\nconst PaddedDiv = styled.div`\n   padding-left: 5px;\n`;\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         width: '100%',\n         maxWidth: 500,\n         backgroundColor: theme.palette.background.paper,\n      },\n      nested: {\n         paddingLeft: theme.spacing(4),\n      },\n      progressBar: {\n         minWidth: '150px',\n      },\n   })\n);\n\nfunction SingleStudentOverview() {\n   const { data: users } = useQuery<User>(GET_USERS);\n   // const { userId } = useParams();\n   const classes = useStyles();\n   const history = useHistory();\n   console.log(users);\n\n   const COMP_TASK_PERCENT = 100;\n\n   const test: any = history.location.state;\n   const inputUser: User = {\n      id: test?.id,\n      firstName: test?.firstName,\n      lastName: test?.lastName,\n   };\n\n   const missions = [\n      {\n         id: '123',\n         name: 'Mission 1',\n         description: 'mission1 for you',\n         subMissions: [\n            {\n               id: '345',\n               name: 'Sub-Mission 1',\n               description: 'SubMission1 description',\n               tasks: [\n                  {\n                     id: 'string',\n                     name: 'string',\n                     instructions: 'string',\n                     points: 3,\n                     parentMissionId: 'string',\n                     parentMissionIndex: 4,\n                     pages: [],\n                     requirements: [],\n                  },\n                  {\n                     id: 'string2',\n                     name: 'string2',\n                     instructions: 'string2',\n                     points: 3,\n                     parentMissionId: 'string2',\n                     parentMissionIndex: 4,\n                     pages: [],\n                     requirements: [],\n                  },\n               ],\n            },\n         ],\n      },\n   ];\n\n   const goals = [\n      {\n         name: 'Goal 1',\n      },\n      {\n         name: 'Goal 2',\n      },\n      {\n         name: 'Goal 3',\n      },\n   ];\n\n   const compGoals = [\n      {\n         name: 'Goal 0',\n      },\n      {\n         name: 'Goal 0.1',\n      },\n      {\n         name: 'Goal 0.2',\n      },\n   ];\n\n   return (\n      <div style={{ marginLeft: '5px', marginRight: '5px', backgroundColor: '#DAEFFE' }}>\n         <StudentDiv>\n            <StudentNameDiv>\n               {inputUser.firstName} {inputUser.lastName}\n            </StudentNameDiv>\n            <StudentImageDiv>\n               <img src={StudentPicture} alt=\"\" style={{ width: 200, height: 200 }} />\n            </StudentImageDiv>\n         </StudentDiv>\n         <RowDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Current Targets</FieldTitleDiv>\n               {missions.map((mission) => (\n                  <MissionDropDown\n                     name={mission.name}\n                     subMissions={mission.subMissions as MissionSubMission[]}\n                  />\n               ))}\n            </ColumnDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Current Goals</FieldTitleDiv>\n               {goals.map((goal) => (\n                  <List>\n                     <PaddedDiv>\n                        <ListItem\n                           button\n                           className={classes.nested}\n                           style={{\n                              border: '1px',\n                              borderColor: '#C2D2FC',\n                              borderStyle: 'solid',\n                              backgroundColor: '#E9EEFC',\n                           }}\n                        >\n                           <ListItemText primary={goal.name} />\n                           <LinearProgressWithLabel\n                              className={classes.progressBar}\n                              value={COMP_TASK_PERCENT}\n                           />\n                        </ListItem>\n                     </PaddedDiv>\n                  </List>\n               ))}\n            </ColumnDiv>\n         </RowDiv>\n         <RowDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Completed Targets</FieldTitleDiv>\n               {missions.map((compMission) => (\n                  <MissionDropDown\n                     name={compMission.name}\n                     subMissions={compMission.subMissions as MissionSubMission[]}\n                  />\n               ))}\n            </ColumnDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Completed Goals</FieldTitleDiv>\n               {compGoals.map((compGoal) => (\n                  <List>\n                     <PaddedDiv>\n                        <ListItem\n                           button\n                           className={classes.nested}\n                           style={{\n                              border: '1px',\n                              borderColor: '#C2D2FC',\n                              borderStyle: 'solid',\n                              backgroundColor: '#E9EEFC',\n                           }}\n                        >\n                           <ListItemText primary={compGoal.name} />\n                           <LinearProgressWithLabel\n                              className={classes.progressBar}\n                              value={COMP_TASK_PERCENT}\n                           />\n                        </ListItem>\n                     </PaddedDiv>\n                  </List>\n               ))}\n            </ColumnDiv>\n         </RowDiv>\n      </div>\n   );\n}\n\nexport default SingleStudentOverview;\n","/* eslint-disable @typescript-eslint/no-unsafe-assignment */\nimport React, { useState } from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport styled from 'styled-components';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport LinearProgressWithLabel from './LinearProgressWithLabel';\nimport ObjectiveDropDown from './ObjectiveDropDown';\nimport { LearningObjective } from '../../interfaces/LearningObjective';\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         width: '100%',\n         maxWidth: 500,\n         backgroundColor: theme.palette.background.paper,\n      },\n      nested: {\n         paddingLeft: theme.spacing(4),\n      },\n      progressBar: {\n         minWidth: '150px',\n      },\n   })\n);\n\nconst PaddedDiv = styled.div`\n   padding-left: 10px;\n`;\n\nexport interface TargetDropDownProps {\n   name: string;\n   learningObjectives: LearningObjective[];\n}\n\n// Handles state to open or close dropdown\nfunction handleClick(\n   openObjectBool: boolean,\n   openFunction: React.Dispatch<React.SetStateAction<boolean>>\n): void {\n   openFunction(!openObjectBool);\n}\n\nexport default function TargetDropDown({ name, learningObjectives }: TargetDropDownProps) {\n   const classes = useStyles();\n   const [open, setOpen] = useState(false);\n\n   const TARGET_PERCENT = 50;\n\n   return (\n      <List component=\"nav\" aria-labelledby=\"nested-list-subheader\" className={classes.root}>\n         <PaddedDiv>\n            <ListItem\n               button\n               onClick={() => handleClick(open, setOpen)}\n               style={{\n                  border: '1px',\n                  borderColor: '#C2D2FC',\n                  borderStyle: 'solid',\n                  backgroundColor: '#E9EEFC',\n               }}\n            >\n               <ListItemText primary={name} />\n               <LinearProgressWithLabel className={classes.progressBar} value={TARGET_PERCENT} />\n               {open ? <ExpandLess /> : <ExpandMore />}\n            </ListItem>\n         </PaddedDiv>\n         <Collapse in={open} timeout=\"auto\" unmountOnExit>\n            {learningObjectives.map((objective: LearningObjective) => (\n               <ObjectiveDropDown name={objective.name} tasks={objective.tasks} />\n            ))}\n         </Collapse>\n      </List>\n   );\n}\n","import { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport styled from 'styled-components';\nimport StudentPicture from '../../assets/images/images-1.png';\nimport LinearProgressWithLabel from '../LinearProgressWithLabel/LinearProgressWithLabel';\nimport TargetDropDown from '../LinearProgressWithLabel/TargetDropDown';\nimport { LearningObjective } from '../../interfaces/LearningObjective';\n\nconst StudentDiv = styled.div`\n   height: 275px;\n   width: 100%;\n   font-size: 24pt;\n   display: flex;\n   justify-content: flex-start;\n   align-items: left;\n   flex-direction: column;\n`;\n\nconst StudentNameDiv = styled.div`\n   height: 50px;\n   width: 100%;\n   font-size: 24pt;\n   display: flex;\n   justify-content: flex-start;\n   align-items: left;\n`;\n\nconst StudentImageDiv = styled.div`\n   height: 200px;\n   width: 100%;\n   font-size: 24pt;\n   display: flex;\n   justify-content: flex-start;\n   align-items: left;\n`;\n\nconst FieldTitleDiv = styled.div`\n   height: 30px;\n   width: 100%;\n   background-color: #99d6ff;\n   align-items: center;\n   display: flex;\n   padding: 5px;\n   border: 1px;\n   border-color: #1A8BDE;\n   border-style: solid;\n}\n`;\n\nconst RowDiv = styled.div`\n   width: 100%;\n   display: flex;\n   background-color: white;\n`;\n\nconst ColumnDiv = styled.div`\n   width: 100%;\n   flex-direction: column;\n   padding: 5px;\n`;\n\nconst PaddedDiv = styled.div`\n   padding-left: 5px;\n`;\n\nconst useStyles = makeStyles((theme: Theme) =>\n   createStyles({\n      root: {\n         width: '100%',\n         maxWidth: 500,\n         backgroundColor: theme.palette.background.paper,\n      },\n      nested: {\n         paddingLeft: theme.spacing(4),\n      },\n      progressBar: {\n         minWidth: '150px',\n      },\n   })\n);\n\nexport interface LearningTarget {\n   name: string;\n   learningObjectives: LearningObjective[];\n}\n\nexport default function SingleStudentMasteryOveriew() {\n   const classes = useStyles();\n\n   const learningTargets = [\n      {\n         name: 'Target 1',\n         learningObjectives: [\n            {\n               name: 'Objective 1',\n               tasks: [\n                  {\n                     name: 'Task 1',\n                  },\n                  {\n                     name: 'Task 2',\n                  },\n               ],\n            },\n            {\n               name: 'Objective 2',\n               tasks: [\n                  {\n                     name: 'Task 1',\n                  },\n                  {\n                     name: 'Task 2',\n                  },\n               ],\n            },\n         ],\n      },\n      {\n         name: 'Target 2',\n         learningObjectives: [\n            {\n               name: 'Objective 1',\n               tasks: [\n                  {\n                     name: 'Task 1',\n                  },\n                  {\n                     name: 'Task 2',\n                  },\n               ],\n            },\n            {\n               name: 'Objective 2',\n               tasks: [\n                  {\n                     name: 'Task 1',\n                  },\n                  {\n                     name: 'Task 2',\n                  },\n               ],\n            },\n         ],\n      },\n   ];\n\n   const goals = [\n      {\n         name: 'Goal 1',\n      },\n      {\n         name: 'Goal 2',\n      },\n      {\n         name: 'Goal 3',\n      },\n   ];\n\n   const compGoals = [\n      {\n         name: 'Goal 0',\n      },\n      {\n         name: 'Goal 0.1',\n      },\n      {\n         name: 'Goal 0.2',\n      },\n   ];\n\n   const compLearningTargets = [\n      {\n         name: 'Target 0',\n         compLearningObjectives: [\n            {\n               name: 'Objective 1',\n               tasks: [\n                  {\n                     name: 'Task 1',\n                  },\n                  {\n                     name: 'Task 2A',\n                  },\n               ],\n            },\n         ],\n      },\n      {\n         name: 'Target 0.5',\n         compLearningObjectives: [\n            {\n               name: 'Objective 1',\n               tasks: [\n                  {\n                     name: 'Task 1',\n                  },\n                  {\n                     name: 'Task 2A',\n                  },\n               ],\n            },\n         ],\n      },\n   ];\n\n   const COMP_TASK_PERCENT = 100;\n\n   return (\n      <div style={{ marginLeft: '5px', marginRight: '5px', backgroundColor: '#DAEFFE' }}>\n         <StudentDiv>\n            <StudentNameDiv>\n               {/* {inputUser.firstName} {inputUser.lastName} */} Bob Jones\n            </StudentNameDiv>\n            <StudentImageDiv>\n               <img src={StudentPicture} alt=\"\" style={{ width: 200, height: 200 }} />\n            </StudentImageDiv>\n         </StudentDiv>\n         <RowDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Current Targets</FieldTitleDiv>\n               {learningTargets.map((target) => (\n                  <TargetDropDown\n                     name={target.name}\n                     learningObjectives={target.learningObjectives as LearningObjective[]}\n                  />\n               ))}\n            </ColumnDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Current Goals</FieldTitleDiv>\n               {goals.map((goal) => (\n                  <List>\n                     <PaddedDiv>\n                        <ListItem\n                           button\n                           className={classes.nested}\n                           style={{\n                              border: '1px',\n                              borderColor: '#C2D2FC',\n                              borderStyle: 'solid',\n                              backgroundColor: '#E9EEFC',\n                           }}\n                        >\n                           <ListItemText primary={goal.name} />\n                           <LinearProgressWithLabel\n                              className={classes.progressBar}\n                              value={COMP_TASK_PERCENT}\n                           />\n                        </ListItem>\n                     </PaddedDiv>\n                  </List>\n               ))}\n            </ColumnDiv>\n         </RowDiv>\n         <RowDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Completed Targets</FieldTitleDiv>\n               {compLearningTargets.map((compTarget) => (\n                  <TargetDropDown\n                     name={compTarget.name}\n                     learningObjectives={compTarget.compLearningObjectives as LearningObjective[]}\n                  />\n               ))}\n            </ColumnDiv>\n            <ColumnDiv>\n               <FieldTitleDiv>Completed Goals</FieldTitleDiv>\n               {compGoals.map((compGoal) => (\n                  <List>\n                     <PaddedDiv>\n                        <ListItem\n                           button\n                           className={classes.nested}\n                           style={{\n                              border: '1px',\n                              borderColor: '#C2D2FC',\n                              borderStyle: 'solid',\n                              backgroundColor: '#E9EEFC',\n                           }}\n                        >\n                           <ListItemText primary={compGoal.name} />\n                           <LinearProgressWithLabel\n                              className={classes.progressBar}\n                              value={COMP_TASK_PERCENT}\n                           />\n                        </ListItem>\n                     </PaddedDiv>\n                  </List>\n               ))}\n            </ColumnDiv>\n         </RowDiv>\n      </div>\n   );\n}\n","import { Switch, Route } from 'react-router-dom';\nimport './App.css';\nimport { Auth, Hub } from 'aws-amplify';\nimport { useState, useEffect } from 'react';\nimport { withAuthenticator } from 'aws-amplify-react';\nimport CreateCourseDialog from './Components/CreateCourseDialog/CreateCourseDialog';\nimport Dashboard from './Screens/Dashboard/Dashboard';\nimport StudentOverview from './Components/StudentOverview/StudentOverview';\nimport TaskSubmissionOverview from './Components/TaskSubmissionOverview';\nimport ViewTaskSubmission from './Components/ViewTaskSubmission';\nimport Navigation from './Navigation/Navigation';\nimport SingleStudentOverview from './Components/SingleStudentOverview/SingleStudentOverview';\nimport SingleStudentMasteryOverview from './Components/SingleStudentMasteryOverview/SingleStudentMasteryOverview';\n\n// Entry point of the Flitped App\nfunction App() {\n   const [, setUser] = useState(null);\n\n   function storeToken(): void {\n      Auth.currentSession()\n         .then((userSession) => {\n            const accessToken = userSession.getAccessToken();\n            const jwt = accessToken.getJwtToken();\n            localStorage.setItem('accessToken', JSON.stringify(accessToken));\n            localStorage.setItem('jwt', jwt);\n\n            return Auth.currentAuthenticatedUser();\n         })\n         .then((authUser) => {\n            setUser(authUser);\n         })\n         .catch(() => console.log('Not signed in'));\n   }\n\n   useEffect(() => {\n      Hub.listen('auth', ({ payload: { event, data } }) => {\n         switch (event) {\n            case 'signIn':\n            case 'cognitoHostedUI':\n               storeToken();\n               break;\n            case 'signOut':\n               setUser(null);\n               break;\n            case 'signIn_failure':\n            case 'cognitoHostedUI_failure':\n               console.log('Sign in failure', data);\n               break;\n            default:\n               break;\n         }\n      });\n\n      storeToken();\n   }, []);\n\n   return (\n      <div className=\"App\">\n         <Navigation />\n         <Switch>\n            <Route path=\"/addNewCourse\">\n               <CreateCourseDialog />\n            </Route>\n            <Route path=\"/taskSubmissionOverview\">\n               <TaskSubmissionOverview />\n            </Route>\n            <Route path=\"/viewTaskSubmission\">\n               <ViewTaskSubmission />\n            </Route>\n            <Route path=\"/studentOverview\">\n               <StudentOverview />\n            </Route>\n            <Route path=\"/singleStudentOverview\">\n               <SingleStudentOverview />\n            </Route>\n            <Route path=\"/singleStudentMasteryOverview\">\n               <SingleStudentMasteryOverview />\n            </Route>\n            <Route path=\"/\">\n               <Dashboard />\n            </Route>\n         </Switch>\n      </div>\n   );\n}\n\nexport default withAuthenticator(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n   if (onPerfEntry && onPerfEntry instanceof Function) {\n      // eslint-disable-next-line @typescript-eslint/no-floating-promises\n      import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n         getCLS(onPerfEntry);\n         getFID(onPerfEntry);\n         getFCP(onPerfEntry);\n         getLCP(onPerfEntry);\n         getTTFB(onPerfEntry);\n      });\n   }\n};\n\nexport default reportWebVitals;\n","type Environment = {\n   uri: string;\n};\n\nlet uri: string = process.env.REACT_APP_URI as string;\n\nif (process.env.NODE_ENV === 'production') {\n   uri = process.env.REACT_APP_URI as string;\n}\n\nexport const environment: Environment = {\n   uri,\n};\n","import { makeVar } from '@apollo/client';\nimport { QuizBlock } from '../interfaces/QuizBlock';\nimport { QuizBlockSubmission } from '../interfaces/QuizBlockSubmission';\n\nconst quizblock: QuizBlock = {\n   id: 'quizblock1',\n   title: 'Week 1 Quiz',\n   blockIndex: 0,\n   pageIndex: 1,\n   requiredScore: 72,\n   points: 100,\n   questions: [\n      {\n         id: 'question0',\n         points: 4,\n         description: 'During photosynthesis green plants absorb',\n         options: [\n            { id: 0, description: 'oxygen' },\n            { id: 1, description: 'nitrogen' },\n            { id: 2, description: 'carbon monoxide' },\n            { id: 3, description: 'carbon dioxide' },\n         ],\n         feedback: 'feeback0',\n         answers: [3],\n      },\n      {\n         id: 'question1',\n         points: 4,\n         description: 'Ginger is a stem and not a root because',\n         options: [\n            { id: 0, description: 'It lacks chlorophyll' },\n            { id: 1, description: 'It stores food material' },\n            { id: 2, description: 'It has notes and internodes' },\n            { id: 3, description: 'It grows horizontally in the soil' },\n         ],\n         feedback: 'feeback1',\n         answers: [3],\n      },\n      {\n         id: 'question2',\n         points: 4,\n         description: '__produces CO2 and water',\n         options: [\n            { id: 0, description: 'Pollination' },\n            { id: 1, description: 'Reduction' },\n            { id: 2, description: 'A combustion reaction' },\n         ],\n         feedback: 'feeback2',\n         answers: [2],\n      },\n   ],\n};\n\nconst quizblockSubmissions: QuizBlockSubmission[] = [\n   {\n      id: 'a9c8e50acae',\n      student: 'Tyrion Lannister',\n      points: 100,\n      studentAnswers: [],\n   },\n   {\n      id: 'a9c8e50aca1',\n      student: 'Gregor Clegane',\n      points: 100,\n      studentAnswers: [],\n   },\n   {\n      id: 'a9c8e50aca2',\n      student: 'Lancel Lannister ',\n      points: 100,\n      studentAnswers: [],\n   },\n];\n\nconst quizblockSubmission: QuizBlockSubmission = {\n   id: 'submission1',\n   student: 'Tyrion Lannister',\n   points: 100,\n   studentAnswers: [\n      {\n         questionId: 'question0',\n         result: true,\n         choices: [1],\n      },\n      {\n         questionId: 'question1',\n         result: false,\n         choices: [2],\n      },\n      {\n         questionId: 'question2',\n         result: true,\n         choices: [2],\n      },\n   ],\n};\n\nexport const quizblockVar = makeVar<QuizBlock>(quizblock);\n\nexport const quizblockSubmissionVar = makeVar<QuizBlockSubmission>(quizblockSubmission);\n\nexport const quizblockSubmissionsVar = makeVar<QuizBlockSubmission[]>(quizblockSubmissions);\n","import { InMemoryCache } from '@apollo/client';\n\nimport * as mock from './mock';\n\nexport const cache: InMemoryCache = new InMemoryCache({\n   typePolicies: {\n      Query: {\n         fields: {\n            quizblock: {\n               read() {\n                  return mock.quizblockVar();\n               },\n            },\n            quizblockSubmission: {\n               read() {\n                  return mock.quizblockSubmissionVar();\n               },\n            },\n            quizblockSubmissions: {\n               read() {\n                  return mock.quizblockSubmissionsVar();\n               },\n            },\n         },\n      },\n   },\n});\n","import { ApolloClient, ApolloLink, from, HttpLink } from '@apollo/client';\nimport { setContext } from '@apollo/client/link/context';\nimport { environment } from '../environment';\nimport { cache } from './cache';\n\ntype AuthorizedHeaders = Record<'authorization', string>;\n\nconst authLink: ApolloLink = setContext((_, { headers }) => {\n   // get the authentication token from local storage if it exists\n   const token = localStorage.getItem('jwt');\n   // return the headers to the context so httpLink can read them\n   const link: { headers: AuthorizedHeaders } = {\n      headers: {\n         ...headers,\n         authorization: token ? `Bearer ${token}` : '',\n      } as AuthorizedHeaders,\n   };\n\n   return link;\n});\n\nconst httpLink: HttpLink = new HttpLink({ uri: environment.uri });\n\nconst apolloClient = new ApolloClient({\n   cache,\n   link: from([authLink, httpLink]),\n});\n\nexport default apolloClient;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { ApolloProvider } from '@apollo/client';\nimport Amplify from 'aws-amplify';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport apolloClient from './clients/apollo-client';\n\nAmplify.configure({\n   Auth: {\n      identityPoolId: 'us-east-1:07057d76-612a-4045-8522-f38a759cf216',\n      region: 'us-east-1',\n      userPoolId: 'us-east-1_POfbbYTKF',\n      userPoolWebClientId: '24sdf1brebo58s89ja0b63c51d',\n      oauth: {\n         domain: 'flipted-ios-test.auth.us-east-1.amazoncognito.com',\n         scope: ['phone', 'email', 'profile', 'openid', 'aws.cognito.signin.user.admin'],\n         redirectSignIn: 'http://localhost:3000/',\n         redirectSignOut: 'http://localhost:3000/',\n         responseType: 'token',\n      },\n   },\n});\n\nReactDOM.render(\n   <React.StrictMode>\n      <link\n         rel=\"stylesheet\"\n         href=\"https://cdn.jsdelivr.net/npm/bootstrap@4.6.0/dist/css/bootstrap.min.css\"\n         integrity=\"sha384-B0vP5xmATw1+K9KRQjQERJvTumQW0nPEzvF6L/Z6nronJ3oUOFUFpCjEUQouq2+l\"\n         crossOrigin=\"anonymous\"\n      />\n      <ApolloProvider client={apolloClient}>\n         <Router>\n            <App />\n         </Router>\n      </ApolloProvider>\n   </React.StrictMode>,\n   document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}